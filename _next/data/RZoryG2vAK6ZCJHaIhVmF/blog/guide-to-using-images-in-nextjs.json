{"pageProps":{"source":{"compiledSource":"var d=Object.defineProperty,u=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var p=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var l=(e,a,t)=>a in e?d(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,n=(e,a)=>{for(var t in a||(a={}))p.call(a,t)&&l(e,t,a[t]);if(o)for(var t of o(a))r.call(a,t)&&l(e,t,a[t]);return e},m=(e,a)=>u(e,h(a));var s=(e,a)=>{var t={};for(var i in e)p.call(e,i)&&a.indexOf(i)<0&&(t[i]=e[i]);if(e!=null&&o)for(var i of o(e))a.indexOf(i)<0&&r.call(e,i)&&(t[i]=e[i]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var i=t,{components:e}=i,a=s(i,[\"components\"]);return mdx(MDXLayout,m(n(n({},layoutProps),a),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h1\",null,\"Introduction\"),mdx(\"p\",null,\"The tailwind starter blog has out of the box support for \",mdx(\"a\",n({parentName:\"p\"},{href:\"https://nextjs.org/docs/api-reference/next/image\"}),\"Next.js's built-in image component\"),\" and automatically swaps out default image tags in markdown or mdx documents to use the Image component provided.\"),mdx(\"h1\",null,\"Usage\"),mdx(\"p\",null,\"To use in a new page route / javascript file, simply import the image component and call it e.g.\"),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{className:\"language-js\"}),`import Image from 'next/image'\n\nfunction Home() {\n  return (\n    <>\n      <h1>My Homepage</h1>\n      <Image\n        src=\"/me.png\"\n        alt=\"Picture of the author\"\n        width={500} height={500}\n      />\n      <p>Welcome to my homepage!</p>\n    </>\n  )\n}\n\nexport default Home\n`)),mdx(\"p\",null,\"For a markdown file, the default image tag can be used and the default \",mdx(\"inlineCode\",{parentName:\"p\"},\"img\"),\" tag gets replaced by the \",mdx(\"inlineCode\",{parentName:\"p\"},\"Image\"),\" component in the build process.\"),mdx(\"p\",null,\"Assuming we have a file called \",mdx(\"inlineCode\",{parentName:\"p\"},\"ocean.jpg\"),\" in \",mdx(\"inlineCode\",{parentName:\"p\"},\"data/img/ocean.jpg\"),\", the following line of code would generate the optimized image.\"),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{}),`![ocean](/static/images/ocean.jpg)\n`)),mdx(\"p\",null,\"Alternatively, since we are using mdx, we can just use the image component directly! Note, that you would have to provide a fixed width and height. The \",mdx(\"inlineCode\",{parentName:\"p\"},\"img\"),\" tag method parses the dimension automatically.\"),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{className:\"language-js\"}),`<Image\n  alt=\"ocean\"\n  src=\"/static/images/ocean.jpg\"\n  width={256} height={128}\n/>\n`)),mdx(\"p\",null,mdx(\"em\",{parentName:\"p\"},\"Note\"),\": If you try to save the image, it is in webp format, if your browser supports it!\"),mdx(\"p\",null,mdx(\"img\",n({parentName:\"p\"},{src:\"/static/images/ocean.jpeg\",alt:\"ocean\"}))),mdx(\"p\",null,\"Photo by\",\" \",mdx(\"a\",{href:\"https://unsplash.com/@yucar?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\"},\"YUCAR FotoGrafik\"),\" \",\"on\",\" \",mdx(\"a\",{href:\"https://unsplash.com/s/photos/sea?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\"},\"Unsplash\")),mdx(\"h1\",null,\"Benefits\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Smaller image size with Webp (~30% smaller than jpeg)\"),mdx(\"li\",{parentName:\"ul\"},\"Responsive images - the correct image size is served based on the user's viewport\"),mdx(\"li\",{parentName:\"ul\"},\"Lazy loading - images load as they are scrolled to the viewport\"),mdx(\"li\",{parentName:\"ul\"},\"Avoids \",mdx(\"a\",n({parentName:\"li\"},{href:\"https://web.dev/cls/\"}),\"Cumulative Layout Shift\")),mdx(\"li\",{parentName:\"ul\"},\"Optimization on demand instead of build-time - no increase in build time!\")),mdx(\"h1\",null,\"Limitations\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\"},\"Due to the reliance of \",mdx(\"inlineCode\",{parentName:\"p\"},\"next/image\"),\", unless you are using an external image CDN like Cloudinary or Imgix, it is practically required to use Vercel for hosting. This is because the component acts like a serverless function that calls a highly optimized image CDN.\"),mdx(\"p\",{parentName:\"li\"},\"If you do not want to be tied to Vercel, you can remove \",mdx(\"inlineCode\",{parentName:\"p\"},\"imgToJsx\"),\" in \",mdx(\"inlineCode\",{parentName:\"p\"},\"remarkPlugins\"),\" in \",mdx(\"inlineCode\",{parentName:\"p\"},\"lib/mdx.js\"),\". This would avoid substituting the default \",mdx(\"inlineCode\",{parentName:\"p\"},\"img\"),\" tag.\"),mdx(\"p\",{parentName:\"li\"},\"Alternatively, one could wait for image optimization at build time to be supported. A different library, \",mdx(\"a\",n({parentName:\"p\"},{href:\"https://github.com/cyrilwanner/next-optimized-images\"}),\"next-optimized-images\"),\" does that, although it requires transforming the images through webpack which is not done here.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\"},\"Images from external links are not passed through \",mdx(\"inlineCode\",{parentName:\"p\"},\"next/image\"))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\"},\"All images have to be stored in the \",mdx(\"inlineCode\",{parentName:\"p\"},\"public\"),\" folder e.g \",mdx(\"inlineCode\",{parentName:\"p\"},\"/static/images/ocean.jpeg\")))))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"DEV Images in Next.js","date":"2020-11-11","tags":["next js","guide"],"draft":false,"summary":"In this article we introduce adding images in the tailwind starter blog and the benefits and limitations of the next/image component."}},"frontMatter":{"title":"DEV Images in Next.js","date":"2020-11-11","tags":["next js","guide"],"draft":false,"summary":"In this article we introduce adding images in the tailwind starter blog and the benefits and limitations of the next/image component."}},"__N_SSG":true}